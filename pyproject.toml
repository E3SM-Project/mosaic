[project]
name = "mosaic"
dynamic = ["version"]
authors = [
  { name="E3SM Development Team", email="anolan@lanl.gov" },
]
description = "A visualization package for MPAS meshes"
license = {file = "LICENSE"}
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
]

dependencies = [
    "cartopy",
    "cmocean",
    "h5netcdf",
    "netcdf4",
    "matplotlib",
    "numpy",
    "pooch",
    "pyproj",
    "scipy",
    "shapely",
    "tqdm",
    "xarray",
]

[project.optional-dependencies]
docs = [
    # building documentation
    "sphinx",
    "myst-nb",
    "sphinx-book-theme",
    "sphinx-copybutton",
    "sphinx-remove-toctrees",
]

dev = [
    # linting and testing
    "pip",
    "pytest",
    "pytest-timeout",
    "isort",
    "flake8",
    "mypy",
    "pre-commit",
]

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
minversion = "6"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = ["error"]
log_cli_level = "INFO"
testpaths = ["tests"]

[tool.mypy]
files = ["src", "test"]
python_version = "3.10"
strict = false
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
ignore_missing_imports = true
warn_unreachable = true
warn_unused_configs = true

[tool.setuptools.dynamic]
version = { attr = "mosaic.version.__version__" }

[tool.ruff.lint]
extend-select = [
  "B",           # flake8-bugbear
  "I",           # isort
  "ARG",         # flake8-unused-arguments
  "C4",          # flake8-comprehensions
  "EM",          # flake8-errmsg
  "ICN",         # flake8-import-conventions
  "ISC",         # flake8-implicit-str-concat
  "G",           # flake8-logging-format
  "PGH",         # pygrep-hooks
  "PIE",         # flake8-pie
  "PL",          # pylint
  "PT",          # flake8-pytest-style
  "PTH",         # flake8-use-pathlib
  "RET",         # flake8-return
  "RUF",         # Ruff-specific
  "SIM",         # flake8-simplify
  "UP",          # pyupgrade
  "YTT",         # flake8-2020
  "EXE",         # flake8-executable
  "NPY",         # NumPy specific rules
  "PD",          # pandas-vet
]
ignore = [
  "PLR09",    # Design related pylint codes
  "PLR2004",  # Magic value in comparison
  "PT013",    # Incorrect import of pytest
]
flake8-unused-arguments.ignore-variadic-names = true
isort.required-imports = ["from __future__ import annotations"]
